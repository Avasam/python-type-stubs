import numpy as np
#from pandas._libs.sparse import IntIndex as IntIndex
#from pandas.core.arrays import SparseArray as SparseArray
#from pandas.core.arrays.categorical import factorize_from_iterable as factorize_from_iterable
#from pandas.core.construction import extract_array as extract_array
#from pandas.core.dtypes.cast import maybe_promote as maybe_promote
#from pandas.core.dtypes.common import ensure_platform_int as ensure_platform_int, is_bool_dtype as is_bool_dtype, is_extension_array_dtype as is_extension_array_dtype, is_integer as is_integer, is_integer_dtype as is_integer_dtype, is_list_like as is_list_like, is_object_dtype as is_object_dtype, needs_i8_conversion as needs_i8_conversion
#from pandas.core.dtypes.missing import notna as notna
from pandas.core.frame import DataFrame as DataFrame
#from pandas.core.indexes.api import Index as Index, MultiIndex as MultiIndex
#from pandas.core.series import Series as Series
#from pandas.core.sorting import compress_group_index as compress_group_index, decons_obs_group_ids as decons_obs_group_ids, get_compressed_ids as get_compressed_ids, get_group_index as get_group_index
from typing import Any, Optional

class _Unstacker:
    values: Any = ...
    value_columns: Any = ...
    fill_value: Any = ...
    constructor: Any = ...
    index: Any = ...
    level: Any = ...
    lift: Any = ...
    new_index_levels: Any = ...
    new_index_names: Any = ...
    removed_name: Any = ...
    removed_level: Any = ...
    removed_level_full: Any = ...
    def __init__(self, values: np.ndarray, index: Any, level: Any=..., value_columns: Any=..., fill_value: Any=..., constructor: Any=...) -> None: ...
    def get_result(self): ...
    def get_new_values(self): ...
    def get_new_columns(self): ...
    def get_new_index(self): ...

def unstack(obj: Any, level: Any, fill_value: Optional[Any] = ...): ...
def stack(frame: Any, level: int = ..., dropna: bool = ...): ...
def stack_multiple(frame: Any, level: Any, dropna: bool = ...): ...
def get_dummies(data: Any, prefix: Any=..., prefix_sep: Any=..., dummy_na: Any=..., columns: Any=..., sparse: Any=..., drop_first: Any=..., dtype: Any=...) -> DataFrame: ...
