from pandas import DataFrame as DataFrame, Series as Series
from typing import Union

def merge(left, right, how: str=..., on=..., left_on=..., right_on=..., left_index: bool=..., right_index: bool=..., sort: bool=..., suffixes=..., copy: bool=..., indicator: bool=..., validate=...) -> DataFrame: ...
def merge_ordered(left, right, on=..., left_on=..., right_on=..., left_by=..., right_by=..., fill_method=..., suffixes=..., how: str=...) -> DataFrame: ...
def merge_asof(left, right, on=..., left_on=..., right_on=..., left_index: bool=..., right_index: bool=..., by=..., left_by=..., right_by=..., suffixes=..., tolerance=..., allow_exact_matches: bool=..., direction: str=...) -> DataFrame: ...

class _MergeOperation:
    left = ...
    right = ...
    how = ...
    axis = ...
    on = ...
    left_on = ...
    right_on = ...
    copy = ...
    suffixes = ...
    sort = ...
    left_index = ...
    right_index = ...
    indicator = ...
    indicator_name = ...
    def __init__(self, left: Union[Series, DataFrame], right: Union[Series, DataFrame], how: str=..., on=..., left_on=..., right_on=..., axis=..., left_index: bool=..., right_index: bool=..., sort: bool=..., suffixes=..., copy: bool=..., indicator: bool=..., validate=...) -> None: ...
    def get_result(self): ...

class _OrderedMerge(_MergeOperation):
    fill_method = ...
    def __init__(self, left, right, on=..., left_on=..., right_on=..., left_index: bool=..., right_index: bool=..., axis=..., suffixes=..., copy: bool=..., fill_method=..., how: str=...) -> None: ...
    def get_result(self): ...

class _AsOfMerge(_OrderedMerge):
    by = ...
    left_by = ...
    right_by = ...
    tolerance = ...
    allow_exact_matches = ...
    direction = ...
    def __init__(self, left, right, on=..., left_on=..., right_on=..., left_index: bool=..., right_index: bool=..., by=..., left_by=..., right_by=..., axis=..., suffixes=..., copy: bool=..., fill_method=..., how: str=..., tolerance=..., allow_exact_matches: bool=..., direction: str=...) -> None: ...
