from markdown.core import Markdown
from typing import Any, Mapping, Sequence, overload

class Extension:
    config: Mapping[str, str] = ...
    @overload
    def __init__(self, **kwargs: Mapping[str, str]) -> None: ...
    @overload
    def __init__(self, **kwargs: Any) -> None: ...
    def getConfig(self, key: str, default: str = ...) -> str: ...
    def getConfigs(self) -> Mapping[str, str]: ...
    def getConfigInfo(self) -> Sequence[Mapping[str, str]]: ...
    def setConfig(self, key: str, value: str) -> None: ...
    def setConfigs(self, items: Mapping[str, str]) -> None: ...
    def extendMarkdown(self, md: Markdown) -> None: ...

